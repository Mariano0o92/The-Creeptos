"use strict";var coinsContainer=document.querySelector(".coins__container"),input=document.querySelector("input"),listCoins=[];function getCoins(){fetch("https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1?x_cg_demo_api_key=CG-pe75sbUCP7wgszxkqUY8PCMx",{method:"GET"}).then(function(n){return n.json()}).then(function(n){console.log(n),createCoins(n)}).catch(function(n){console.log(n)})}getCoins();var createCoins=function(n){n.forEach(function(n){var c=document.createElement("div"),e=(c.classList.add("coins__row"),listCoins.push(c),n.price_change_percentage_24h),i=e<0?"":" coins__difference--green";c.innerHTML='\n            <div class="coins__rank">'.concat(n.market_cap_rank,'</div>\n            <img class="coins__logo" src="').concat(n.image,'" alt="').concat(n.name,'">\n            <div class="coins__name">').concat(n.name,'</div>\n            <div class="coins__shortcut">').concat(n.symbol,'</div>\n            <div class="coins__price">$').concat(n.current_price.toFixed(2),'</div>\n        <div class="coins__volume">$').concat(n.total_volume.toFixed(2),'</div>\n        <div class="coins__difference').concat(i,'">').concat(e.toFixed(2),'%</div>\n        <div class="coins__market-cap">$').concat(n.market_cap,"</div>\n        "),coinsContainer.appendChild(c)})},filterCoins=function(c){listCoins.forEach(function(n){n.innerText.toLowerCase().includes(c.toLowerCase())?n.style.display="grid":n.style.display="none"})};input.addEventListener("input",function(n){return filterCoins(n.target.value)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJjb2luc0NvbnRhaW5lciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImlucHV0IiwiZ2V0Q29pbnMiLCJmZXRjaCIsIlVSTF9BUEkiLCJtZXRob2QiLCJ0aGVuIiwicmVzIiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJkYXRhIiwiY3JlYXRlQ29pbnMiLCJlcnIiLCJjcnlwdG9Db2luIiwiY2xhc3NMaXN0IiwicGVyY2VudGFnZUNoYW5nZSIsImNoYW5nZUNvbG9yQ2xhc3MiLCJjb2luUm93IiwiaW5uZXJIVE1MIiwibGlzdENvaW5zIiwicHVzaCIsImNvaW4iLCJwcmljZV9jaGFuZ2VfcGVyY2VudGFnZV8yNGgiLCJmaWx0ZXJDb2lucyIsImNvbmNhdCIsIm1hcmtldF9jYXBfcmFuayIsInRvTG93ZXJDYXNlIiwiaW1hZ2UiLCJuYW1lIiwic3ltYm9sIiwiY3VycmVudF9wcmljZSIsInRvRml4ZWQiLCJ0b3RhbF92b2x1bWUiLCJtYXJrZXRfY2FwIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNlYXJjaFRlcm0iLCJmb3JFYWNoIiwiaW5uZXJUZXh0IiwiaW5jbHVkZXMiLCJzdHlsZSIsImRpc3BsYXkiLCJlIiwidGFyZ2V0IiwidmFsdWUiXSwibWFwcGluZ3MiOiJhQUFBLElBQU1BLGVBQWlCQyxTQUFTQyxjQUFjLG1CQUFtQixFQUMzREMsTUFBUUYsU0FBU0MsY0FBYyxPQUFPLEVBRHRDRixVQUFjLEdBSXBCLFNBQUFJLFdBUUNDLE1BQUtDLHlKQUFrQixDQUN0QkMsT0FBTSxLQUNQLENBQUEsRUFDRUMsS0FBUSxTQUFBQyxHQUFJQSxPQUFJQyxFQUFJQSxLQUFFLENBQUEsQ0FBQSxFQUFBRixLQUN0QkEsU0FBQUEsR0FDQUcsUUFBT0MsSUFBSUMsQ0FBQ0EsRUFDWkMsWUFBV0QsQ0FBQ0EsQ0FDYixDQUFDLEVBQUMsTUFFREYsU0FBQUEsR0FDQUEsUUFBQ0MsSUFBQUcsQ0FBQSxDQUNKLENBQUEsQ0FFQVgsQ0FBQUEsU0FHT1ksRUFEUCxJQUlFRixZQUFnQmIsU0FBQUEsR0FDUmdCLEVBSUZDLFFBQUFBLFNBQUFBLEdBTE4sSUFNTUMsRUFBQUEsU0FBbUJELGNBQUFBLEtBQW1CLEVBRHRDQSxHQUpORSxFQU9BQSxVQUFRQyxJQUFTLFlBQUEsRUFXaEJDLFVBQUFDLEtBQUFILENBQUEsRUFkd0JJLEVBQUtDLDZCQWlCaENOLEVBQUFELEVBQUEsRUFBQSxHQUFBLDRCQUVBRSxFQUFNTSxVQUFjLDBDQUFBQyxPQUNVSCxFQUFBSSxnQkFBQSxvREFBQSxFQUFBRCxPQUNVRSxFQUFhQyxNQUFBLFNBQUEsRUFBQUgsT0FBQUgsRUFBQU8sS0FBQSwyQ0FBQSxFQUFBSixPQUNaRSxFQUFBQSxLQUFXLG1EQUFBLEVBQUFGLE9BQ2JILEVBQUFRLE9BQUEsaURBQUEsRUFBQUwsT0FDeEJILEVBQUFTLGNBQUFDLFFBQUEsQ0FBQSxFQUFBLDhDQUFBLEVBQUFQLE9BQ3dCSCxFQUFBVyxhQUFBRCxRQUFBLENBQUEsRUFBQSwrQ0FBQSxFQUFBUCxPQUMvQlIsRUFBQSxJQUFBLEVBQUFRLE9BQUFULEVBQUFnQixRQUFBLENBQUEsRUFBQSxtREFBQSxFQUFBUCxPQUNGSCxFQUFBWSxXQUFBLGtCQUFBLEVBSU5qQyxlQUFNa0MsWUFBaUJqQixDQUFTLENBakIvQixDQWlCaUMsQ0FBZ0MsRUFaNURNLFlBQWMsU0FBQ1ksR0FDakJoQixVQUFVaUIsUUFBUSxTQUFBZixHQUNHQSxFQUFLZ0IsVUFBVVgsWUFBWSxFQUMvQlksU0FBU0gsRUFBV1QsWUFBWSxDQUFDLEVBQzFDTCxFQUFLa0IsTUFBTUMsUUFBVSxPQUVyQm5CLEVBQUtrQixNQUFNQyxRQUFVLE1BRTdCLENBQUMsQ0FDTCxFQUdBeEMsTUFBTWtDLGlCQUFpQixRQUFTLFNBQUNPLEdBQUMsT0FBS2xCLFlBQVlrQixFQUFFQyxPQUFPQyxLQUFLLENBQUMsQ0FBQSIsImZpbGUiOiJzY3JpcHQtbWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29pbnNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29pbnNfX2NvbnRhaW5lcicpXHJcbmNvbnN0IGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXQnKVxyXG5jb25zdCBsaXN0Q29pbnMgPSBbXVxyXG5cclxuLy8gQVBJIERBVEFcclxuXHJcbmZ1bmN0aW9uIGdldENvaW5zKCkge1xyXG5cdGNvbnN0IFVSTF9BUEkgPVxyXG5cdFx0J2h0dHBzOi8vYXBpLmNvaW5nZWNrby5jb20vYXBpL3YzL2NvaW5zL21hcmtldHM/dnNfY3VycmVuY3k9dXNkJm9yZGVyPW1hcmtldF9jYXBfZGVzYyZwZXJfcGFnZT0yNTAmcGFnZT0xPydcclxuXHRjb25zdCBwcm94eVVybCA9ICdodHRwczovL2NvcnNwcm94eS5pby8/J1xyXG5cdGNvbnN0IEFQSV9LRVkgPSAneF9jZ19kZW1vX2FwaV9rZXk9Q0ctcGU3NXNiVUNQN3dnc3p4a3FVWThQQ014J1xyXG5cclxuXHRmZXRjaChVUkxfQVBJICsgQVBJX0tFWSwge1xyXG5cdFx0bWV0aG9kOiAnR0VUJyxcclxuXHR9KVxyXG5cdFx0LnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXHJcblx0XHQudGhlbihkYXRhID0+IHtcclxuXHRcdFx0Y29uc29sZS5sb2coZGF0YSlcclxuXHRcdFx0Y3JlYXRlQ29pbnMoZGF0YSlcclxuXHRcdH0pXHJcblx0XHQuY2F0Y2goZXJyID0+IHtcclxuXHRcdFx0Y29uc29sZS5sb2coZXJyKVxyXG5cdFx0fSlcclxufVxyXG5cclxuZ2V0Q29pbnMoKVxyXG5cclxuY29uc3QgY3JlYXRlQ29pbnMgPSBjb2lucyA9PiB7XHJcblx0Y29uc3QgY3J5cHRvQ29pbiA9IGNvaW5zXHJcblxyXG5cdGNyeXB0b0NvaW4uZm9yRWFjaChjb2luID0+IHtcclxuXHRcdGNvbnN0IGNvaW5Sb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG5cdFx0Y29pblJvdy5jbGFzc0xpc3QuYWRkKCdjb2luc19fcm93JylcclxuXHJcbiAgICAgICAgbGlzdENvaW5zLnB1c2goY29pblJvdylcclxuXHJcblx0XHRjb25zdCBwZXJjZW50YWdlQ2hhbmdlID0gY29pbi5wcmljZV9jaGFuZ2VfcGVyY2VudGFnZV8yNGhcclxuXHRcdGNvbnN0IGNoYW5nZUNvbG9yQ2xhc3MgPSBwZXJjZW50YWdlQ2hhbmdlIDwgMCA/ICcnIDogJyBjb2luc19fZGlmZmVyZW5jZS0tZ3JlZW4nXHJcblxyXG5cdFx0Y29pblJvdy5pbm5lckhUTUwgPSBgXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2luc19fcmFua1wiPiR7Y29pbi5tYXJrZXRfY2FwX3Jhbmt9PC9kaXY+XHJcbiAgICAgICAgICAgIDxpbWcgY2xhc3M9XCJjb2luc19fbG9nb1wiIHNyYz1cIiR7Y29pbi5pbWFnZX1cIiBhbHQ9XCIke2NvaW4ubmFtZX1cIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvaW5zX19uYW1lXCI+JHtjb2luLm5hbWV9PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2luc19fc2hvcnRjdXRcIj4ke2NvaW4uc3ltYm9sfTwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29pbnNfX3ByaWNlXCI+JCR7Y29pbi5jdXJyZW50X3ByaWNlLnRvRml4ZWQoMil9PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNvaW5zX192b2x1bWVcIj4kJHtjb2luLnRvdGFsX3ZvbHVtZS50b0ZpeGVkKDIpfTwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2luc19fZGlmZmVyZW5jZSR7Y2hhbmdlQ29sb3JDbGFzc31cIj4ke3BlcmNlbnRhZ2VDaGFuZ2UudG9GaXhlZCgyKX0lPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNvaW5zX19tYXJrZXQtY2FwXCI+JCR7Y29pbi5tYXJrZXRfY2FwfTwvZGl2PlxyXG4gICAgICAgIGBcclxuXHRcdGNvaW5zQ29udGFpbmVyLmFwcGVuZENoaWxkKGNvaW5Sb3cpXHJcblx0fSlcclxufVxyXG5cclxuLy8gU0VBUkNIIEVOR0lORVxyXG5cclxuY29uc3QgZmlsdGVyQ29pbnMgPSAoc2VhcmNoVGVybSkgPT4ge1xyXG4gICAgbGlzdENvaW5zLmZvckVhY2goY29pbiA9PiB7XHJcbiAgICAgICAgY29uc3QgY29pblRleHQgPSBjb2luLmlubmVyVGV4dC50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgIGlmIChjb2luVGV4dC5pbmNsdWRlcyhzZWFyY2hUZXJtLnRvTG93ZXJDYXNlKCkpKSB7XHJcbiAgICAgICAgICAgIGNvaW4uc3R5bGUuZGlzcGxheSA9ICdncmlkJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb2luLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuXHJcblxyXG5pbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIChlKSA9PiBmaWx0ZXJDb2lucyhlLnRhcmdldC52YWx1ZSkpXHJcbiJdfQ==
