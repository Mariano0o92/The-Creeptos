var coinsContainer=document.querySelector(".coins__container"),input=document.querySelector("input"),listCoins=[];function getCoins(){window.API_KEY;fetch("https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1",{method:"GET"}).then(function(n){return n.json()}).then(function(n){createCoins(n),console.log(n)}).catch(function(n){console.log(n)})}getCoins();var createCoins=function(n){n.forEach(function(n){var c=document.createElement("div"),e=(c.classList.add("coins__row"),listCoins.push(c),n.price_change_percentage_24h),i=e<0?"":" coins__difference--green";c.innerHTML='\n            <div class="coins__rank">'.concat(n.market_cap_rank,'</div>\n            <img class="coins__logo" src="').concat(n.image,'" alt="').concat(n.name,'">\n            <div class="coins__name">').concat(n.name,'</div>\n            <div class="coins__shortcut">').concat(n.symbol,'</div>\n            <div class="coins__price">$').concat(n.current_price,'</div>\n        <div class="coins__volume">$').concat(n.total_volume,'</div>\n        <div class="coins__difference').concat(i,'">').concat(e.toFixed(2),'%</div>\n        <div class="coins__market-cap">$').concat(n.market_cap,"</div>\n        "),coinsContainer.appendChild(c)})},filterCoins=function(c){listCoins.forEach(function(n){n.innerText.toLowerCase().includes(c.toLowerCase())?n.style.display="grid":n.style.display="none"})};input.addEventListener("input",function(n){return filterCoins(n.target.value)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJjb2luc0NvbnRhaW5lciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImlucHV0IiwiZ2V0Q29pbnMiLCJ3aW5kb3ciLCJBUElfS0VZIiwiZmV0Y2giLCJtZXRob2QiLCJ0aGVuIiwicmVzIiwianNvbiIsImNyZWF0ZUNvaW5zIiwiZGF0YSIsImNvbnNvbGUiLCJsb2ciLCJlcnIiLCJjcnlwdG9Db2luIiwiY2xhc3NMaXN0IiwicGVyY2VudGFnZUNoYW5nZSIsImNoYW5nZUNvbG9yQ2xhc3MiLCJjb2luUm93IiwiaW5uZXJIVE1MIiwibGlzdENvaW5zIiwicHVzaCIsImNvaW4iLCJwcmljZV9jaGFuZ2VfcGVyY2VudGFnZV8yNGgiLCJmaWx0ZXJDb2lucyIsImNvbmNhdCIsIm1hcmtldF9jYXBfcmFuayIsInRvTG93ZXJDYXNlIiwiaW1hZ2UiLCJuYW1lIiwic3ltYm9sIiwiY3VycmVudF9wcmljZSIsInRvdGFsX3ZvbHVtZSIsInRvRml4ZWQiLCJtYXJrZXRfY2FwIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNlYXJjaFRlcm0iLCJmb3JFYWNoIiwiaW5uZXJUZXh0IiwiaW5jbHVkZXMiLCJzdHlsZSIsImRpc3BsYXkiLCJlIiwidGFyZ2V0IiwidmFsdWUiXSwibWFwcGluZ3MiOiJBQUFBLElBQU1BLGVBQWlCQyxTQUFTQyxjQUFjLG1CQUFtQixFQUMzREMsTUFBUUYsU0FBU0MsY0FBYyxPQUFPLEVBRHRDRixVQUFjLEdBSXBCLFNBQUFJLFdBS2tCQyxPQUFBQyxRQUdqQkMsTUFORCwyR0FNYyxDQUNaQyxPQUFNLEtBQ1AsQ0FBQSxFQUNFQyxLQUFRLFNBQUFDLEdBQUlBLE9BQUlDLEVBQUlBLEtBQUUsQ0FBQSxDQUFBLEVBQUFGLEtBQ3RCQSxTQUFBQSxHQUNBRyxZQUFXQyxDQUFDQSxFQUNaQyxRQUFPQyxJQUFJRixDQUFDQSxDQUNiLENBQUMsRUFBQyxNQUVEQyxTQUFBQSxHQUNBQSxRQUFDQyxJQUFBQyxDQUFBLENBQ0osQ0FBQSxDQUVBWixDQUFBQSxTQUdPYSxFQURQLElBSUVMLFlBQWdCWCxTQUFBQSxHQUNSaUIsRUFJRkMsUUFBQUEsU0FBQUEsR0FMTixJQU1NQyxFQUFBQSxTQUFtQkQsY0FBQUEsS0FBbUIsRUFEdENBLEdBSk5FLEVBT0FBLFVBQVFDLElBQVMsWUFBQSxFQVdoQkMsVUFBQUMsS0FBQUgsQ0FBQSxFQWR3QkksRUFBS0MsNkJBaUJoQ04sRUFBQUQsRUFBQSxFQUFBLEdBQUEsNEJBRUFFLEVBQU1NLFVBQWMsMENBQUFDLE9BQ1VILEVBQUFJLGdCQUFBLG9EQUFBLEVBQUFELE9BQ1VFLEVBQWFDLE1BQUEsU0FBQSxFQUFBSCxPQUFBSCxFQUFBTyxLQUFBLDJDQUFBLEVBQUFKLE9BQ1pFLEVBQUFBLEtBQVcsbURBQUEsRUFBQUYsT0FDYkgsRUFBQVEsT0FBQSxpREFBQSxFQUFBTCxPQUN4QkgsRUFBQVMsY0FBQSw4Q0FBQSxFQUFBTixPQUN3QkgsRUFBQVUsYUFBQSwrQ0FBQSxFQUFBUCxPQUMvQlIsRUFBQSxJQUFBLEVBQUFRLE9BQUFULEVBQUFpQixRQUFBLENBQUEsRUFBQSxtREFBQSxFQUFBUixPQUNGSCxFQUFBWSxXQUFBLGtCQUFBLEVBSU5sQyxlQUFNbUMsWUFBaUJqQixDQUFTLENBakIvQixDQWlCaUMsQ0FBZ0MsRUFaNURNLFlBQWMsU0FBQ1ksR0FDakJoQixVQUFVaUIsUUFBUSxTQUFBZixHQUNHQSxFQUFLZ0IsVUFBVVgsWUFBWSxFQUMvQlksU0FBU0gsRUFBV1QsWUFBWSxDQUFDLEVBQzFDTCxFQUFLa0IsTUFBTUMsUUFBVSxPQUVyQm5CLEVBQUtrQixNQUFNQyxRQUFVLE1BRTdCLENBQUMsQ0FDTCxFQUdBekMsTUFBTW1DLGlCQUFpQixRQUFTLFNBQUNPLEdBQUMsT0FBS2xCLFlBQVlrQixFQUFFQyxPQUFPQyxLQUFLLENBQUMsQ0FBQSIsImZpbGUiOiJzY3JpcHQtbWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29pbnNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29pbnNfX2NvbnRhaW5lcicpXHJcbmNvbnN0IGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXQnKVxyXG5jb25zdCBsaXN0Q29pbnMgPSBbXVxyXG5cclxuLy8gQVBJIERBVEFcclxuXHJcbmZ1bmN0aW9uIGdldENvaW5zKCkge1xyXG5cdGNvbnN0IFVSTF9BUEkgPVxyXG5cdFx0J2h0dHBzOi8vYXBpLmNvaW5nZWNrby5jb20vYXBpL3YzL2NvaW5zL21hcmtldHM/dnNfY3VycmVuY3k9dXNkJm9yZGVyPW1hcmtldF9jYXBfZGVzYyZwZXJfcGFnZT0yNTAmcGFnZT0xJ1xyXG5cdGNvbnN0IHByb3h5VXJsID0gJ2h0dHBzOi8vY29yc3Byb3h5LmlvLz8nXHJcblx0Y29uc3QgQVBJX0tFWSA9IHdpbmRvdy5BUElfS0VZXHJcblxyXG5cdGZldGNoKFVSTF9BUEksIHtcclxuXHRcdG1ldGhvZDogJ0dFVCcsXHJcblx0fSlcclxuXHRcdC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxyXG5cdFx0LnRoZW4oZGF0YSA9PiB7XHJcblx0XHRcdGNyZWF0ZUNvaW5zKGRhdGEpXHJcblx0XHRcdGNvbnNvbGUubG9nKGRhdGEpO1xyXG5cdFx0fSlcclxuXHRcdC5jYXRjaChlcnIgPT4ge1xyXG5cdFx0XHRjb25zb2xlLmxvZyhlcnIpXHJcblx0XHR9KVxyXG59XHJcblxyXG5nZXRDb2lucygpXHJcblxyXG5jb25zdCBjcmVhdGVDb2lucyA9IGNvaW5zID0+IHtcclxuXHRjb25zdCBjcnlwdG9Db2luID0gY29pbnNcclxuXHJcblx0Y3J5cHRvQ29pbi5mb3JFYWNoKGNvaW4gPT4ge1xyXG5cdFx0Y29uc3QgY29pblJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcblx0XHRjb2luUm93LmNsYXNzTGlzdC5hZGQoJ2NvaW5zX19yb3cnKVxyXG5cclxuICAgICAgICBsaXN0Q29pbnMucHVzaChjb2luUm93KVxyXG5cclxuXHRcdGNvbnN0IHBlcmNlbnRhZ2VDaGFuZ2UgPSBjb2luLnByaWNlX2NoYW5nZV9wZXJjZW50YWdlXzI0aFxyXG5cdFx0Y29uc3QgY2hhbmdlQ29sb3JDbGFzcyA9IHBlcmNlbnRhZ2VDaGFuZ2UgPCAwID8gJycgOiAnIGNvaW5zX19kaWZmZXJlbmNlLS1ncmVlbidcclxuXHJcblx0XHRjb2luUm93LmlubmVySFRNTCA9IGBcclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvaW5zX19yYW5rXCI+JHtjb2luLm1hcmtldF9jYXBfcmFua308L2Rpdj5cclxuICAgICAgICAgICAgPGltZyBjbGFzcz1cImNvaW5zX19sb2dvXCIgc3JjPVwiJHtjb2luLmltYWdlfVwiIGFsdD1cIiR7Y29pbi5uYW1lfVwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29pbnNfX25hbWVcIj4ke2NvaW4ubmFtZX08L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvaW5zX19zaG9ydGN1dFwiPiR7Y29pbi5zeW1ib2x9PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2luc19fcHJpY2VcIj4kJHtjb2luLmN1cnJlbnRfcHJpY2V9PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNvaW5zX192b2x1bWVcIj4kJHtjb2luLnRvdGFsX3ZvbHVtZX08L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29pbnNfX2RpZmZlcmVuY2Uke2NoYW5nZUNvbG9yQ2xhc3N9XCI+JHtwZXJjZW50YWdlQ2hhbmdlLnRvRml4ZWQoMil9JTwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2luc19fbWFya2V0LWNhcFwiPiQke2NvaW4ubWFya2V0X2NhcH08L2Rpdj5cclxuICAgICAgICBgXHJcblx0XHRjb2luc0NvbnRhaW5lci5hcHBlbmRDaGlsZChjb2luUm93KVxyXG5cdH0pXHJcbn1cclxuXHJcbi8vIFNFQVJDSCBFTkdJTkVcclxuXHJcbmNvbnN0IGZpbHRlckNvaW5zID0gKHNlYXJjaFRlcm0pID0+IHtcclxuICAgIGxpc3RDb2lucy5mb3JFYWNoKGNvaW4gPT4ge1xyXG4gICAgICAgIGNvbnN0IGNvaW5UZXh0ID0gY29pbi5pbm5lclRleHQudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICBpZiAoY29pblRleHQuaW5jbHVkZXMoc2VhcmNoVGVybS50b0xvd2VyQ2FzZSgpKSkge1xyXG4gICAgICAgICAgICBjb2luLnN0eWxlLmRpc3BsYXkgPSAnZ3JpZCc7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29pbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59XHJcblxyXG5cclxuaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoZSkgPT4gZmlsdGVyQ29pbnMoZS50YXJnZXQudmFsdWUpKVxyXG4iXX0=
